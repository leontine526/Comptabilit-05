modules = ["python-3.11", "web", "nodejs-20"]
run = "python main.py"

[nix]
channel = "stable-24_05"
packages = ["freetype", "glibcLocales", "gumbo", "harfbuzz", "iana-etc", "jbig2dec", "libGL", "libGLU", "libjpeg_turbo", "libxcrypt", "mupdf", "openjpeg", "openssl", "pkg-config", "postgresql", "swig", "tesseract", "xcbuild", "xsimd"]

[deployment]
deploymentTarget = "autoscale"
run = ["sh", "-c", "python main.py"]

[workflows]
runButton = "Démarrer Application Corrigée"

[[workflows.workflow]]
name = "Run SmartOHADA"
author = 42275794
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Run"
author = 42739427
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Run SmartOHADA Production"
author = 42885741
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -m nltk.downloader punkt stopwords -d nltk_data"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export FLASK_ENV=production"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export PORT=5000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Initialize Database"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python db_initialize.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python create_test_data.py"

[[workflows.workflow]]
name = "Database Setup"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python db_initialize.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python create_test_data.py"

[[workflows.workflow]]
name = "Run Production"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export FLASK_ENV=production"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export PORT=5000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -m nltk.downloader punkt stopwords -d nltk_data"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_db_connection.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python db_initialize.py --retry 3"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Run Production Robust"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -m nltk.downloader punkt stopwords -d nltk_data"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export FLASK_ENV=production"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export PORT=5000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_db_connection.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python db_initialize.py --retry 5"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Run Stable"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_db_connection.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python db_initialize.py --retry 3"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Run New DB"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DATABASE_URL=\"postgresql://neondb_owner:npg_APBmGjkT0y1H@ep-rough-truth-a5ntheq6-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_new_db.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python db_initialize.py --retry 3"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Initialize New Database"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DATABASE_URL=\"postgresql://neondb_owner:npg_APBmGjkT0y1H@ep-rough-truth-a5ntheq6-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python initialize_database.py"

[[workflows.workflow]]
name = "DB Initialize Complete"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DATABASE_URL=\"postgresql://neondb_owner:npg_APBmGjkT0y1H@ep-rough-truth-a5ntheq6-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python init_db_complete.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python create_test_data.py"

[[workflows.workflow]]
name = "Run App Robust"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DATABASE_URL=\"postgresql://neondb_owner:npg_APBmGjkT0y1H@ep-rough-truth-a5ntheq6-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_new_db.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python init_db_complete.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Initialize Database Complete"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DATABASE_URL=\"postgresql://neondb_owner:npg_APBmGjkT0y1H@ep-rough-truth-a5ntheq6-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python db_initialize.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python create_test_data.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python add_profile_pictures.py"

[[workflows.workflow]]
name = "Run Fixed App"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DATABASE_URL=\"postgresql://neondb_owner:npg_APBmGjkT0y1H@ep-rough-truth-a5ntheq6-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python enable_file_logging.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_db_tables.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Run Debug Mode"
author = 42922772
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DATABASE_URL=\"postgresql://neondb_owner:npg_APBmGjkT0y1H@ep-rough-truth-a5ntheq6-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python enable_file_logging.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python detailed_db_check.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Diagnostic d'erreurs"
author = 42931312
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python error_diagnostics.py"

[[workflows.workflow]]
name = "Corriger les erreurs"
author = 42931312
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python fix_common_errors.py"

[[workflows.workflow]]
name = "Run avec Neon DB"
author = 42931312
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DATABASE_URL=\"postgresql://neondb_owner:npg_APBmGjkT0y1H@ep-rough-truth-a5ntheq6-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_logs.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python db_initialize.py --retry 3"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Run SmartOHADA avec DB"
author = 42931312
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DATABASE_URL=\"postgresql://neondb_owner:npg_APBmGjkT0y1H@ep-rough-truth-a5ntheq6-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python enable_file_logging.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_logs.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python db_initialize.py --retry 3"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Run Fixed App v2"
author = 42931312
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DATABASE_URL=\"postgresql://neondb_owner:npg_APBmGjkT0y1H@ep-rough-truth-a5ntheq6-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python fix_database_connection.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python enable_file_logging.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_db_tables.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Corriger Modules Manquants"
author = 42931312
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python fix_missing_modules.py"

[[workflows.workflow]]
name = "Démarrage Robuste"
author = 42931312
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python robust_app_starter.py"

[[workflows.workflow]]
name = "Démarrer Application Corrigée"
author = 42931312
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python fix_missing_modules.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python fix_database_connection.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python enable_file_logging.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python robust_app_starter.py"

[[workflows.workflow]]
name = "Installer Dépendances avec UPM"
author = 42931312
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "upm add flask-wtf flask-login flask-sqlalchemy sqlalchemy flask-socketio python-dotenv xlsxwriter eventlet psycopg2-binary werkzeug"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_requirements.py"

[[ports]]
localPort = 5000
externalPort = 80
